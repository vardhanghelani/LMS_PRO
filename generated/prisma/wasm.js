
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Item_tranScalarFieldEnum = {
  tran_id: 'tran_id',
  item_id: 'item_id',
  status: 'status',
  user_id: 'user_id',
  record_status: 'record_status'
};

exports.Prisma.Item_tran_historyScalarFieldEnum = {
  id: 'id',
  item_id: 'item_id',
  tran_id: 'tran_id',
  status: 'status',
  requested_by: 'requested_by',
  approved_by: 'approved_by',
  requested_at: 'requested_at',
  approved_at: 'approved_at',
  date_issued: 'date_issued',
  date_due: 'date_due',
  date_returned: 'date_returned',
  remarks: 'remarks'
};

exports.Prisma.Library_itemsScalarFieldEnum = {
  item_id: 'item_id',
  title: 'title',
  author: 'author',
  isbn: 'isbn',
  year: 'year',
  genre: 'genre',
  image_url: 'image_url',
  description: 'description',
  librarian_id: 'librarian_id',
  item_type: 'item_type',
  location: 'location',
  publisher: 'publisher',
  language: 'language',
  pages: 'pages',
  duration: 'duration',
  format: 'format',
  subject: 'subject',
  keywords: 'keywords',
  created_at: 'created_at',
  updated_at: 'updated_at',
  record_status: 'record_status'
};

exports.Prisma.FinesScalarFieldEnum = {
  fine_id: 'fine_id',
  user_id: 'user_id',
  item_tran_historyId: 'item_tran_historyId',
  amount: 'amount',
  reason: 'reason',
  status: 'status',
  created_at: 'created_at',
  paid_at: 'paid_at'
};

exports.Prisma.LogsScalarFieldEnum = {
  log_id: 'log_id',
  description: 'description',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  notification_id: 'notification_id',
  type: 'type',
  item_id: 'item_id',
  from_user_id: 'from_user_id',
  to_user_id: 'to_user_id',
  tran_id: 'tran_id',
  reservation_id: 'reservation_id',
  status: 'status',
  message: 'message',
  created_at: 'created_at',
  resolved_at: 'resolved_at'
};

exports.Prisma.User_wishlistScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  item_id: 'item_id',
  created_at: 'created_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  gender: 'gender',
  phone_number: 'phone_number',
  birth_date: 'birth_date',
  address: 'address',
  profile_image_url: 'profile_image_url'
};

exports.Prisma.Contact_usScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  subject: 'subject',
  message: 'message',
  created_at: 'created_at'
};

exports.Prisma.System_configScalarFieldEnum = {
  config_id: 'config_id',
  config_key: 'config_key',
  config_value: 'config_value',
  description: 'description',
  updated_at: 'updated_at'
};

exports.Prisma.Library_cardsScalarFieldEnum = {
  card_id: 'card_id',
  user_id: 'user_id',
  card_number: 'card_number',
  issued_at: 'issued_at',
  expires_at: 'expires_at',
  status: 'status'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.item_tran_historyOrderByRelevanceFieldEnum = {
  remarks: 'remarks'
};

exports.Prisma.library_itemsOrderByRelevanceFieldEnum = {
  title: 'title',
  author: 'author',
  isbn: 'isbn',
  genre: 'genre',
  image_url: 'image_url',
  description: 'description',
  location: 'location',
  publisher: 'publisher',
  language: 'language',
  format: 'format',
  subject: 'subject',
  keywords: 'keywords'
};

exports.Prisma.finesOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.logsOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.notificationsOrderByRelevanceFieldEnum = {
  message: 'message'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  phone_number: 'phone_number',
  address: 'address',
  profile_image_url: 'profile_image_url'
};

exports.Prisma.contact_usOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  subject: 'subject',
  message: 'message'
};

exports.Prisma.system_configOrderByRelevanceFieldEnum = {
  config_key: 'config_key',
  config_value: 'config_value',
  description: 'description'
};

exports.Prisma.library_cardsOrderByRelevanceFieldEnum = {
  card_number: 'card_number'
};
exports.record_status = exports.$Enums.record_status = {
  active: 'active',
  inactive: 'inactive'
};

exports.notifications_type = exports.$Enums.notifications_type = {
  issue: 'issue',
  return: 'return',
  overdue: 'overdue',
  reservation_available: 'reservation_available',
  reservation_expired: 'reservation_expired',
  fine_due: 'fine_due',
  system_maintenance: 'system_maintenance',
  new_item_added: 'new_item_added',
  item_damaged: 'item_damaged',
  item_lost: 'item_lost'
};

exports.users_role = exports.$Enums.users_role = {
  patron: 'patron',
  librarian: 'librarian',
  admin: 'admin'
};

exports.fines_status = exports.$Enums.fines_status = {
  unpaid: 'unpaid',
  paid: 'paid'
};

exports.users_status = exports.$Enums.users_status = {
  active: 'active',
  banned: 'banned'
};

exports.notifications_status = exports.$Enums.notifications_status = {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

exports.gender = exports.$Enums.gender = {
  male: 'male',
  female: 'female',
  other: 'other'
};

exports.library_item_type = exports.$Enums.library_item_type = {
  book: 'book',
  journal: 'journal',
  multimedia: 'multimedia',
  newspaper: 'newspaper',
  magazine: 'magazine',
  thesis: 'thesis',
  report: 'report',
  other: 'other'
};

exports.item_tran_status = exports.$Enums.item_tran_status = {
  available: 'available',
  not_available: 'not_available',
  reserved: 'reserved',
  lost: 'lost',
  damaged: 'damaged'
};

exports.item_tran_history_status = exports.$Enums.item_tran_history_status = {
  issued: 'issued',
  returned: 'returned',
  pending: 'pending',
  rejected: 'rejected',
  overdue: 'overdue'
};

exports.reservation_status = exports.$Enums.reservation_status = {
  pending: 'pending',
  active: 'active',
  expired: 'expired',
  cancelled: 'cancelled',
  fulfilled: 'fulfilled'
};

exports.card_status = exports.$Enums.card_status = {
  active: 'active',
  expired: 'expired',
  suspended: 'suspended',
  cancelled: 'cancelled'
};

exports.Prisma.ModelName = {
  item_tran: 'item_tran',
  item_tran_history: 'item_tran_history',
  library_items: 'library_items',
  fines: 'fines',
  logs: 'logs',
  notifications: 'notifications',
  user_wishlist: 'user_wishlist',
  users: 'users',
  contact_us: 'contact_us',
  system_config: 'system_config',
  library_cards: 'library_cards'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "E:\\LMS_PRO\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "E:\\LMS_PRO\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel item_tran {\n  tran_id           Int                 @id @default(autoincrement())\n  item_id           Int?\n  status            item_tran_status?   @default(available)\n  user_id           Int?\n  record_status     record_status?      @default(active)\n  library_items     library_items?      @relation(fields: [item_id], references: [item_id], onDelete: Restrict, onUpdate: Restrict)\n  users             users?              @relation(fields: [user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict)\n  item_tran_history item_tran_history[]\n  notifications     notifications[]\n\n  @@index([item_id], map: \"item_id\")\n  @@index([user_id], map: \"user_id\")\n}\n\nmodel item_tran_history {\n  id                                          Int                      @id @default(autoincrement())\n  item_id                                     Int?\n  tran_id                                     Int?\n  status                                      item_tran_history_status @default(pending)\n  requested_by                                Int?\n  approved_by                                 Int?\n  requested_at                                DateTime?                @default(now()) @db.DateTime(0)\n  approved_at                                 DateTime?                @db.DateTime(0)\n  date_issued                                 DateTime?                @db.Date\n  date_due                                    DateTime?                @db.Date\n  date_returned                               DateTime?                @db.Date\n  remarks                                     String?                  @db.Text\n  library_items                               library_items?           @relation(fields: [item_id], references: [item_id], onDelete: Restrict, onUpdate: Restrict)\n  item_tran                                   item_tran?               @relation(fields: [tran_id], references: [tran_id], onDelete: Restrict, onUpdate: Restrict)\n  users_item_tran_history_requested_byTousers users?                   @relation(\"item_tran_history_requested_byTousers\", fields: [requested_by], references: [user_id], onDelete: Restrict, onUpdate: Restrict)\n  users_item_tran_history_approved_byTousers  users?                   @relation(\"item_tran_history_approved_byTousers\", fields: [approved_by], references: [user_id], onDelete: Restrict, onUpdate: Restrict)\n  fines                                       fines[]\n\n  @@index([approved_by], map: \"approved_by\")\n  @@index([item_id], map: \"item_id\")\n  @@index([requested_by], map: \"requested_by\")\n  @@index([tran_id], map: \"tran_id\")\n}\n\nmodel library_items {\n  item_id           Int                 @id @default(autoincrement())\n  title             String?             @db.VarChar(255)\n  author            String              @db.VarChar(255)\n  isbn              String?             @db.VarChar(20)\n  year              Int?                @db.Year\n  genre             String?             @db.VarChar(100)\n  image_url         String?             @db.Text\n  description       String?             @db.Text\n  librarian_id      Int?\n  item_type         library_item_type   @default(book)\n  location          String?             @db.VarChar(100)\n  publisher         String?             @db.VarChar(255)\n  language          String?             @db.VarChar(50)\n  pages             Int?\n  duration          Int? // For multimedia items (in minutes)\n  format            String?             @db.VarChar(50) // For multimedia: DVD, CD, etc.\n  subject           String?             @db.VarChar(100)\n  keywords          String?             @db.Text\n  created_at        DateTime?           @default(now()) @db.DateTime(0)\n  updated_at        DateTime?           @default(now()) @db.DateTime(0)\n  record_status     record_status?      @default(active)\n  item_tran         item_tran[]\n  item_tran_history item_tran_history[]\n  notifications     notifications[]\n  user_wishlist     user_wishlist[]\n}\n\nmodel fines {\n  fine_id             Int                @id @default(autoincrement())\n  user_id             Int?\n  item_tran_historyId Int?               @map(\"item_tran_historyId\")\n  amount              Decimal?           @db.Decimal(10, 2)\n  reason              String?            @db.Text\n  status              fines_status?      @default(unpaid)\n  created_at          DateTime?          @default(now()) @db.DateTime(0)\n  paid_at             DateTime?          @db.DateTime(0)\n  users               users?             @relation(fields: [user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict, map: \"fines_ibfk_1\")\n  item_tran_history   item_tran_history? @relation(fields: [item_tran_historyId], references: [id], onDelete: Restrict, onUpdate: Restrict)\n\n  @@index([item_tran_historyId], map: \"item_tran_historyId\")\n  @@index([user_id], map: \"user_id\")\n}\n\nmodel logs {\n  log_id      Int       @id @default(autoincrement())\n  description String    @db.Text\n  user_id     Int\n  created_at  DateTime? @default(now()) @db.DateTime(0)\n  users       users     @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: \"logs_ibfk_1\")\n\n  @@index([user_id], map: \"user_id\")\n}\n\nmodel notifications {\n  notification_id                         Int                   @id @default(autoincrement())\n  type                                    notifications_type?\n  item_id                                 Int?\n  from_user_id                            Int?\n  to_user_id                              Int?\n  tran_id                                 Int?\n  reservation_id                          Int?\n  status                                  notifications_status? @default(pending)\n  message                                 String?               @db.Text\n  created_at                              DateTime?             @default(now()) @db.DateTime(0)\n  resolved_at                             DateTime?             @db.DateTime(0)\n  library_items                           library_items?        @relation(fields: [item_id], references: [item_id], onDelete: Restrict, onUpdate: Restrict)\n  users_notifications_from_user_idTousers users?                @relation(\"notifications_from_user_idTousers\", fields: [from_user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict, map: \"notifications_ibfk_2\")\n  users_notifications_to_user_idTousers   users?                @relation(\"notifications_to_user_idTousers\", fields: [to_user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict, map: \"notifications_ibfk_3\")\n  item_tran                               item_tran?            @relation(fields: [tran_id], references: [tran_id], onDelete: Restrict, onUpdate: Restrict)\n\n  @@index([item_id], map: \"item_id\")\n  @@index([from_user_id], map: \"from_user_id\")\n  @@index([to_user_id], map: \"to_user_id\")\n  @@index([tran_id], map: \"tran_id\")\n  @@index([reservation_id], map: \"reservation_id\")\n}\n\nmodel user_wishlist {\n  id            Int            @id @default(autoincrement())\n  user_id       Int?\n  item_id       Int?\n  created_at    DateTime?      @default(now()) @db.DateTime(0)\n  users         users?         @relation(fields: [user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict, map: \"user_wishlist_ibfk_1\")\n  library_items library_items? @relation(fields: [item_id], references: [item_id], onDelete: Restrict, onUpdate: Restrict)\n\n  @@index([item_id], map: \"item_id\")\n  @@index([user_id], map: \"user_id\")\n}\n\nmodel users {\n  user_id                                                 Int                 @id @default(autoincrement())\n  name                                                    String?             @db.VarChar(100)\n  email                                                   String?             @unique(map: \"email\") @db.VarChar(100)\n  password_hash                                           String?             @db.VarChar(255)\n  role                                                    users_role?         @default(patron)\n  status                                                  users_status?       @default(active)\n  created_at                                              DateTime?           @default(now()) @db.DateTime(0)\n  updated_at                                              DateTime?           @default(now()) @db.DateTime(0)\n  gender                                                  gender?             @default(male)\n  phone_number                                            String?             @db.VarChar(20)\n  birth_date                                              DateTime?           @db.DateTime(0)\n  address                                                 String?             @db.VarChar(255)\n  profile_image_url                                       String?             @db.VarChar(255)\n  item_tran                                               item_tran[]\n  item_tran_history_item_tran_history_requested_byTousers item_tran_history[] @relation(\"item_tran_history_requested_byTousers\")\n  item_tran_history_item_tran_history_approved_byTousers  item_tran_history[] @relation(\"item_tran_history_approved_byTousers\")\n  fines                                                   fines[]\n  logs                                                    logs[]\n  notifications_notifications_from_user_idTousers         notifications[]     @relation(\"notifications_from_user_idTousers\")\n  notifications_notifications_to_user_idTousers           notifications[]     @relation(\"notifications_to_user_idTousers\")\n  user_wishlist                                           user_wishlist[]\n  library_cards                                           library_cards[]\n}\n\nmodel contact_us {\n  id         Int       @id @default(autoincrement())\n  name       String?   @db.VarChar(100)\n  email      String?   @db.VarChar(255)\n  subject    String?   @db.VarChar(255)\n  message    String?   @db.Text\n  created_at DateTime? @default(now()) @db.DateTime(0)\n}\n\nmodel system_config {\n  config_id    Int      @id @default(autoincrement())\n  config_key   String   @unique @db.VarChar(100)\n  config_value String   @db.Text\n  description  String?  @db.VarChar(255)\n  updated_at   DateTime @default(now()) @updatedAt @db.DateTime(0)\n}\n\nmodel library_cards {\n  card_id     Int         @id @default(autoincrement())\n  user_id     Int?\n  card_number String      @unique @db.VarChar(50)\n  issued_at   DateTime    @default(now()) @db.DateTime(0)\n  expires_at  DateTime?   @db.DateTime(0)\n  status      card_status @default(active)\n  users       users?      @relation(fields: [user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict)\n\n  @@index([user_id], map: \"user_id\")\n}\n\nenum record_status {\n  active\n  inactive\n}\n\nenum notifications_type {\n  issue\n  return\n  overdue\n  reservation_available\n  reservation_expired\n  fine_due\n  system_maintenance\n  new_item_added\n  item_damaged\n  item_lost\n}\n\nenum users_role {\n  patron\n  librarian\n  admin\n}\n\nenum fines_status {\n  unpaid\n  paid\n}\n\nenum users_status {\n  active\n  banned\n}\n\nenum notifications_status {\n  pending\n  approved\n  rejected\n}\n\nenum gender {\n  male\n  female\n  other\n}\n\nenum library_item_type {\n  book\n  journal\n  multimedia\n  newspaper\n  magazine\n  thesis\n  report\n  other\n}\n\nenum item_tran_status {\n  available\n  not_available @map(\"not available\")\n  reserved\n  lost\n  damaged\n}\n\nenum item_tran_history_status {\n  issued\n  returned\n  pending\n  rejected\n  overdue\n}\n\nenum reservation_status {\n  pending\n  active\n  expired\n  cancelled\n  fulfilled\n}\n\nenum card_status {\n  active\n  expired\n  suspended\n  cancelled\n}\n",
  "inlineSchemaHash": "3ab172c14bf6f79e258bba1038d4774bf413f2c8c54afb1dbce7afdac0c48d53",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"item_tran\":{\"fields\":[{\"name\":\"tran_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"item_tran_status\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"record_status\",\"kind\":\"enum\",\"type\":\"record_status\"},{\"name\":\"library_items\",\"kind\":\"object\",\"type\":\"library_items\",\"relationName\":\"item_tranTolibrary_items\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"item_tranTousers\"},{\"name\":\"item_tran_history\",\"kind\":\"object\",\"type\":\"item_tran_history\",\"relationName\":\"item_tranToitem_tran_history\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"notifications\",\"relationName\":\"item_tranTonotifications\"}],\"dbName\":null},\"item_tran_history\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tran_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"item_tran_history_status\"},{\"name\":\"requested_by\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approved_by\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requested_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approved_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"date_issued\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"date_due\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"date_returned\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"remarks\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"library_items\",\"kind\":\"object\",\"type\":\"library_items\",\"relationName\":\"item_tran_historyTolibrary_items\"},{\"name\":\"item_tran\",\"kind\":\"object\",\"type\":\"item_tran\",\"relationName\":\"item_tranToitem_tran_history\"},{\"name\":\"users_item_tran_history_requested_byTousers\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"item_tran_history_requested_byTousers\"},{\"name\":\"users_item_tran_history_approved_byTousers\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"item_tran_history_approved_byTousers\"},{\"name\":\"fines\",\"kind\":\"object\",\"type\":\"fines\",\"relationName\":\"finesToitem_tran_history\"}],\"dbName\":null},\"library_items\":{\"fields\":[{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isbn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"genre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"librarian_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_type\",\"kind\":\"enum\",\"type\":\"library_item_type\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publisher\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pages\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keywords\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"record_status\",\"kind\":\"enum\",\"type\":\"record_status\"},{\"name\":\"item_tran\",\"kind\":\"object\",\"type\":\"item_tran\",\"relationName\":\"item_tranTolibrary_items\"},{\"name\":\"item_tran_history\",\"kind\":\"object\",\"type\":\"item_tran_history\",\"relationName\":\"item_tran_historyTolibrary_items\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"notifications\",\"relationName\":\"library_itemsTonotifications\"},{\"name\":\"user_wishlist\",\"kind\":\"object\",\"type\":\"user_wishlist\",\"relationName\":\"library_itemsTouser_wishlist\"}],\"dbName\":null},\"fines\":{\"fields\":[{\"name\":\"fine_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_tran_historyId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"item_tran_historyId\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"fines_status\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paid_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"finesTousers\"},{\"name\":\"item_tran_history\",\"kind\":\"object\",\"type\":\"item_tran_history\",\"relationName\":\"finesToitem_tran_history\"}],\"dbName\":null},\"logs\":{\"fields\":[{\"name\":\"log_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"logsTousers\"}],\"dbName\":null},\"notifications\":{\"fields\":[{\"name\":\"notification_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"notifications_type\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"from_user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"to_user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tran_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reservation_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"notifications_status\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolved_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"library_items\",\"kind\":\"object\",\"type\":\"library_items\",\"relationName\":\"library_itemsTonotifications\"},{\"name\":\"users_notifications_from_user_idTousers\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"notifications_from_user_idTousers\"},{\"name\":\"users_notifications_to_user_idTousers\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"notifications_to_user_idTousers\"},{\"name\":\"item_tran\",\"kind\":\"object\",\"type\":\"item_tran\",\"relationName\":\"item_tranTonotifications\"}],\"dbName\":null},\"user_wishlist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"user_wishlistTousers\"},{\"name\":\"library_items\",\"kind\":\"object\",\"type\":\"library_items\",\"relationName\":\"library_itemsTouser_wishlist\"}],\"dbName\":null},\"users\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"users_role\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"users_status\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"gender\"},{\"name\":\"phone_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birth_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_image_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"item_tran\",\"kind\":\"object\",\"type\":\"item_tran\",\"relationName\":\"item_tranTousers\"},{\"name\":\"item_tran_history_item_tran_history_requested_byTousers\",\"kind\":\"object\",\"type\":\"item_tran_history\",\"relationName\":\"item_tran_history_requested_byTousers\"},{\"name\":\"item_tran_history_item_tran_history_approved_byTousers\",\"kind\":\"object\",\"type\":\"item_tran_history\",\"relationName\":\"item_tran_history_approved_byTousers\"},{\"name\":\"fines\",\"kind\":\"object\",\"type\":\"fines\",\"relationName\":\"finesTousers\"},{\"name\":\"logs\",\"kind\":\"object\",\"type\":\"logs\",\"relationName\":\"logsTousers\"},{\"name\":\"notifications_notifications_from_user_idTousers\",\"kind\":\"object\",\"type\":\"notifications\",\"relationName\":\"notifications_from_user_idTousers\"},{\"name\":\"notifications_notifications_to_user_idTousers\",\"kind\":\"object\",\"type\":\"notifications\",\"relationName\":\"notifications_to_user_idTousers\"},{\"name\":\"user_wishlist\",\"kind\":\"object\",\"type\":\"user_wishlist\",\"relationName\":\"user_wishlistTousers\"},{\"name\":\"library_cards\",\"kind\":\"object\",\"type\":\"library_cards\",\"relationName\":\"library_cardsTousers\"}],\"dbName\":null},\"contact_us\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"system_config\":{\"fields\":[{\"name\":\"config_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"config_key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config_value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"library_cards\":{\"fields\":[{\"name\":\"card_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"card_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issued_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"card_status\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"library_cardsTousers\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

